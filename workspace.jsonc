/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://harmony-docs.bit.dev/workspace/configurations
 **/ {
  "$schema": "https://static.bit.dev/teambit/schemas/schema.json",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    /**
     * the name of the component workspace. used for development purposes.
     **/
    "name": "components",
    /**
     * set the icon to be shown on the Bit server.
     **/
    "icon": "https://static.bit.dev/bit-logo.svg",
    /**
     * default directory to place a component during `bit import` and `bit create`.
     * the following placeholders are available:
     * name - component name includes namespace, e.g. 'ui/button'.
     * scopeId - full scope-id includes the owner, e.g. 'teambit.compilation'.
     * scope - scope name only, e.g. 'compilation'.
     * owner - owner name in bit.dev, e.g. 'teambit'.
     **/
    "defaultDirectory": "libs/components/src/{scope}/{name}",
    /**
     * default scope for all components in workspace.
     **/
    "defaultScope": "watheia.mfe"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/yarn",
    "policy": {
      "dependencies": {
        "lodash": "^4.17.21",
        "markdown-to-jsx": "^7.1.5",
        "regenerator-runtime": "0.13.9",
        "tslib": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/cache": "^11.7.1",
        "@emotion/react": "^11.7.1",
        "@emotion/server": "^11.4.0",
        "@emotion/styled": "^11.6.0",
        "@mui/icons-material": "^5.2.5",
        "@mui/material": "^5.2.6",
        "@nrwl/next": "^13.4.1",
        "@supabase/gotrue-js": "^1.21.7",
        "@supabase/supabase-js": "^1.29.1",
        "core-js": "^3.20.1",
        "iron-session": "^6.0.4",
        "next": "^12.0.7",
        "next-seo": "^4.28.1",
        "octokit": "^1.7.1",
        "react": "^17.0.2",
        "react-dom": "^17.0.2",
        "swr": "^1.1.2"
      }
    }
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your
   * workspace. this is extremely useful for upgrading, aligning and building components with a new
   * set of dependencies. a rule can be a directory or a component-id/namespace, in which case,
   * wrap the rule with curly brackets (e.g. `"{ui/*}": {}`)
   * see https://harmony-docs.bit.dev/aspects/variants for more info.
   **/
  "teambit.workspace/variants": {
    /**
     * "*" is a special rule which applied on all components in the workspace.
     **/
    "*": {
      "teambit.dependencies/dependency-resolver": {},
      "teambit.pkg/pkg": {
        "packageManagerPublishArgs": ["--access public"],
        "packageJson": {
          "name": "@watheia/{scope}.{name}",
          "private": false,
          "license": "EPL-2.0",
          "author": "Aaron R Miller<amiller@watheia.org>",
          "homepage": "https://www.watheia.io/home",
          "repository": {
            "url": "https://bit.dev/watheia/mfe"
          },
          "keywords": [
            "microcomponent",
            "microfrontend",
            "watheia",
            "mfe",
            "bit",
            "atomic-design",
            "material-ui"
          ]
        }
      }
    },
    "libs/components/src/base-ui": {
      "defaultScope": "watheia.base-ui"
    },
    "libs/components/src/demo": {
      "defaultScope": "watheia.demo"
    },
    "libs/components/src/mfe": {
      "defaultScope": "watheia.mfe"
    },
    "libs/components/src/envs": {
      "defaultScope": "watheia.envs"
    },
    "libs/components/src/theme": {
      "defaultScope": "watheia.theme"
    },
    "{gatsby/gatsby-env}": {
      "teambit.harmony/aspect": {}
    },
    "{material/react-with-mui}": {
      "teambit.harmony/aspect": {}
    },
    "{tailwind/env-with-tailwind}": {
      "teambit.harmony/aspect": {}
    },
    "{material/theme-provider}": {
      "teambit.react/react": {}
    }
  }
}
