generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  id         BigInt    @id @default(autoincrement())
  insertedAt DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @map("inserted_at") @db.Timestamptz(6)
  slug       String    @unique
  createdBy  String    @map("created_by") @db.Uuid
  users      User      @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  messages   Message[]

  @@map("channels")
}

model Message {
  id         BigInt   @id @default(autoincrement())
  insertedAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("inserted_at") @db.Timestamptz(6)
  message    String?
  userId     String   @map("user_id") @db.Uuid
  channelId  BigInt   @map("channel_id")
  channel    Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("messages")
}

model RolePermission {
  id         BigInt        @id @default(autoincrement())
  role       AppRole
  permission AppPermission

  @@unique([role, permission])
  @@map("role_permissions")
}

model UserRole {
  id     BigInt  @id @default(autoincrement())
  userId String  @map("user_id") @db.Uuid
  role   AppRole
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, role])
  @@map("user_roles")
}

model User {
  id       String      @id @db.Uuid
  username String?
  status   UserStatus? @default(OFFLINE)
  channels Channel[]
  messages Message[]
  roles    UserRole[]

  @@map("users")
}

enum AppPermission {
  DELETE_CHANNEL  @map("channels.delete")
  DELETE_MESSAGE  @map("messages.delete")

  @@map("app_permission")
}

enum AppRole {
  ADMIN      @map("admin")
  MODERATOR  @map("moderator")

  @@map("app_role")
}

enum UserStatus {
  ONLINE
  OFFLINE

  @@map("user_status")
}
